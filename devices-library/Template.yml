#
# Do NOT edit this file, it is a template explaining most of the fields.
# "Official" files for each device contain only specific comments on the device to keep them clean
#
deviceName: "Mininova"
brand: "Novation"
#
# Select how to send bank select messages to the device:
# ------------------------------------------------------
# NO_BANK_PRG      : Does not send bank select, send only Program Change
# BANK_MSB_PRG     : Send CC "BANK Select MSB" only, then Program Change
# BANK_LSB_PRG     : Send CC "BANK Select LSB" only, then Program Change
# BANK_MSB_LSB_PRG : Send CC "BANK Select MSB" then "BANK Select LSB", then Program Change
# BANK_PRG_PRG     : Send 2 Program Change. This weird mode is used in the Yamaha TG-77
#
presetFormat: BANK_LSB_PRG
#
# STANDARD     : it is possible to get the patch name with SysEx
# SOUND_CANVAS : Patch names are hardcoded in java application
#
presetNaming: STANDARD

#
# MIDI ports to talk to the device
#
inputMidiDevice: "2- MIDISPORT Uno In"
outputMidiDevice: "2- MIDISPORT Uno Out"
#
# How long we need to wait after a program change before querying the edit buffer
# default is 1000
#
presetLoadTimeMs: 500
#
# How long we need to wait after a mode change before querying anything
# default is 1000
#
modeLoadTimeMs: 500
#
# Macro are used to build SysEx payloads in Hexadecimal
# - They can be parametric
# - You can use a macro inside a macro
# - You can use ranges to do a kind of "loop" and retrieve hundreds of parameters in one call
macros:
  # This is the mode simple example
  - "EditBuffer()               : F0 002029 03017F 40 000000 00 00 F7"
  # Here we add the response size. This can speedup backups drastically
  - "EditBuffer()       : 0001B : F0 002029 03017F 40 000000 00 00 F7"
  # Other characters in size, are ignored. It's a way to indicate: "this is a resquest with unknown response size"
  - "EditBuffer()       : -     : F0 002029 03017F 40 000000 00 00 F7"
  # Here we use a string 'LM  012SY' which will be converted in ASCII. It's typically used with Yamaha devices
  - "System Data()       : 0001B : F0 43 20 7E 'LM  0012SY' F7"
  # This is a parametric example
  - "BankPatch(bank,prg)        : F0 002029 03017F 41 010000 bank prg F7"
  # This macro declare a Mapper to extract fields from the response
  - "PatchName() : EditBuffer() : PatchMapper"
  # Here an example using a checksum. CK5 instruct a calculation on the 5 previous bytes
  - "setMode(mode)        : F041104612 00000000 mode CK5 F7"
  # Here a typicall example to create a total backup, calling multiple macros in one shot
  - "Everything()         : System Common();Performances();Internal Patches();Internal Rhythm();Temp Performance();Temp Rhythm Setup();Temp Patch()"
  #
  # Example using nibbles.
  #
  # If we call MicroTuningUserTableName($2)
  #  the final string will be "F0 43 20 7F 03 00 5 2 00 F7"
  #  and aggregated to "F0 43 20 7F 03 00 52 00 F7"
  # If we call MicroTuningUserTableName($02) or If we call MicroTuningUserTableName(2)
  #  it will fail because we inject a byte instead of a nibble.
  #  the final string will be "F0 43 20 7F 03 00 502 00 F7"
  #
  - "DREQ(addr)                   : -  : F0 43 20 7F 03 addr F7"
  - "MicroTuningUserTableName(t)  : 20 : DREQ(00 5 t 00)"
  # Here another example found in the Korg Tr-Rack
  - "ModeChange(mode)                : - : F0 42 30 3B 4E 0 mode 00 F7"
  - "ProgramMode()                   : - : ModeChange( $2 )"
  - "CombiMode()                     : - : ModeChange( $0 )"
  #
  # Example using ranges
  #
  # Here we call 16 times the macro Multi for all channels
  # Only one range per macro is allowed for now
  #
  - "Multi(channel)           : 120 : F0 43 20 7A 'LM  0065MU' 0000000000000000000000000000 00 channel F7"
  - "AllMulti()               : Multi([0-15])"

#
# decodingKey is optional and only used when the payload needs to be "unpacked" from 7 bit content to 8 bit content
#
decodingKey:
  # where to start the decoding
  start: 6
  # when it ends
  end: 1
  # how to interpret MIDI bits
  # the target is the following:
  #   A7 A6 A5 A4 A3 A2 A1 A0
  #   B7 B6 B5 B4 B3 B2 B1 B0
  #   C7 C6 C5 C4 C3 C2 C1 C0
  #   D7 D6 D5 D4 D3 D2 D1 D0
  #   E7 E6 E5 E4 E3 E2 E1 E0
  #   F7 F6 F5 F4 F3 F2 F1 F0
  #   G7 G6 G5 G4 G3 G2 G1 G0
  # the key is how to interpret the source (what we read in the MIDI SysEx)
  key:
    - 0 G7 F7 E7 D7 C7 B7 A7 # "0" mean it is not used
    - 0 A6 A5 A4 A3 A2 A1 A0
    - 0 B6 B5 B4 B3 B2 B1 B0
    - 0 C6 C5 C4 C3 C2 C1 C0
    - 0 D6 D5 D4 D3 D2 D1 D0
    - 0 E6 E5 E4 E3 E2 E1 E0
    - 0 F6 F5 F4 F3 F2 F1 F0
    - 0 G6 G5 G4 G3 G2 G1 G0
#
# A hardware device always use various mode to operate. They respond differently on MIDI Channels
# - Typically a "single voice mode" is used to play a single patch at a time. The Midi Channel 0 is only used in this case
# - Whereas a "performance mode" is used to play multiple patch at a time, on the same MIDI channel. Typically, in a split mode or Layer mode.
# - "Multi mode" is often used to play many patches, one on each MIDI channel
#
# Banks belongs to modes and Patches belongs to banks
#
deviceModes:
  # Put here a name for the mode
  Single:
    # put here the macro used to retreive patch names
    queryName: PatchName()
    # Optional command to activate the mode. It is a macro call
    command: ModeChange( $2 )
    banks:
      # Put here a name for a bank
      "Bank A":
        # the command indicate how to select the bank
        # It is direclty related to presetFormat
        command: "$01"
        # indicate which program change is valide in this bank
        # you can specify various ranges like this: "4-6,16-17,19,24-26"
        presetDomain: 0-127
        queryName:
      "Bank B":
        command: "$02"
        presetDomain: 0-127
      "Bank C":
        command: "$03"
        presetDomain: 0-127
      # You can override the mode queryName at the bank level
      # This is used in the Yamaha TG-500 where patch 63 is a drum kit and require a different query to get the name
      "Internal 1 Drum":
        command: "$0000"
        queryName: DrumPatchName()
        presetDomain: 63
    # Here an example where categories are defined "per mode"
    # This is the case for Korg Tr-Rack for instance
    categories:
      - Keyboard
      - Organ
      - Mallet
      - ...
#
# categories can be defined "per mode" or for all modes
# This definition is for all modes
categories:
  # When categories are listed like this, it means their index can be found in the SysEx response.
  # So the order is very important
  - None
  - Arp
  - Bass
  - Bell
  - Classic
  - DrumPerc
  - Keyboard
  - Synth Lead
  - Motion Synth
  - Synth Pad
  - Synth Poly
  - Sound FX
  - String
  - External Input
  - Vocoder/Tune
  # Here an example where the category is found directly in the patch name. We provide a list of keywords
  - "Chromatic Percussion: Clav, Marimba, Bell, Vibe, Celst,Pluck,Celeste"
  # Here a special case for Yamaha devices, where the keyword is a prefix
  - "Piano: AP"
  - "Keyboard: KY"
  - "Brass: BR"

#
# Mappers to extract patch names
#
mappers:
  # Put here a name for the mapper
  PatchMapper:
    fields:
      # put here a name for the field
      name:
        # allowed types are STRING,ALESIS_STRING and CATEGORY
        type: STRING
        # unit for the offset and size. default is BYTE
        unit: BIT
        # where to extract
        offset: $0F
        # how many bytes or bits to extract
        size: 16
        # bits must be read in reverse order, LSB first (default is false)
        lsbFirst: true


#
# Patch Overrides are used to convert imported SYSEX to EditBuffer commands
# In this way the internal memory of the device is never overridden
#
patchOverrides:
  # Put here a name for the override
  - name: Default
    # optional, used to select a factory patch in order to get the right selected edit buffer
    # This is used in Yamaha TG-500 for instance.
    # - You need to select a performance before sending a performance edit buffer update
    # - You need to select a drumkit before sending a drumkit edit buffer update
    command: $00003F
    # optional, enforce a specific device mode for the patch being imported
    mode: VoiceMode
    # optional, condition is used to activate or not the override
    condition:
      offset: $06
      value: "'LM  0065DR'" # Drum Voice Patch
    # this is the list of bytes to modify in the SysEx
    overrides:
      - offset: $07 # Edit Buffer message
        value: 00
      - offset: $0B # BANK
        value: 00
      - offset: $0C # PRG
        value: 00
      # here an example to update a checksum
      # CK701 mean compute the checksum on the 701 previous bytes
      - offset: $2C3
        value: CK701 # Checksum
