# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Release build

on:
  workflow_dispatch:

jobs:
  workshop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Jar Build with Maven
        run: mvn clean install --file pom.xml -DskipTests
      - name: Native Build Synth-ripper with Maven
        run: mvn -Pnative native:compile --file synth-ripper/pom.xml -DskipTests
      - name: Native Build Midi-Translator with Maven
        run: mvn -Pnative native:compile --file midi-translator/pom.xml -DskipTests
      #
      # midi-translator
      #
      - name: Prepare midi-translator distrib
        run: |
          cp midi-translator/doc/readme.txt midi-translator/target
          cp -R midi-translator/config midi-translator/target
      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'Windows' }}
        with:
          name: midi-translator-x64.zip
          path: |
            midi-translator/target/midi-translator.exe
            midi-translator/target/jsound.dll
            midi-translator/target/config
            midi-translator/target/readme.txt
      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'macOS' }}
        with:
          name: midi-translator-osx.zip
          path: |
            midi-translator/target/midi-translator
            midi-translator/target/config
            midi-translator/target/readme.txt
      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'Windows' }}
        with:
          name: midi-translator-jvm.zip
          path: |
            midi-translator/target/midi-translator*.jar
            midi-translator/target/config
            midi-translator/target/readme.txt
      #
      # synth-ripper
      #
      - name: Prepare synth-ripper distrib
        run: |
          ls -la synth-ripper/target
          cp synth-ripper/doc/readme.txt synth-ripper/target
          cp -R synth-ripper/config synth-ripper/target
      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'Windows' }}
        with:
          name: synth-ripper-x64.zip
          path: |
            synth-ripper/target/synth-ripper.exe
            synth-ripper/target/jsound.dll
            synth-ripper/target/config
            synth-ripper/target/readme.txt
      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'macOS' }}
        with:
          name: synth-ripper-osx.zip
          path: |
            synth-ripper/target/synth-ripper
            synth-ripper/target/config
            synth-ripper/target/readme.txt
      - uses: actions/upload-artifact@v4
        if: ${{ runner.os == 'Windows' }}
        with:
          name: synth-ripper-jdk.zip
          path: |
            synth-ripper/target/synth-ripper*.jar
            synth-ripper/target/config
            synth-ripper/target/readme.txt            
